# Generated by Django 5.1.2 on 2024-11-08 18:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CacheRefreshLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=10)),
                ('message', models.TextField()),
                ('notification_email', models.BooleanField(default=False)),
                ('notification_whatsapp', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'cache_refresh_logs',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contry_code_number', models.CharField(max_length=3)),
                ('phone_number', models.CharField(max_length=50, unique=True)),
                ('display_phone_number', models.CharField(max_length=255)),
                ('phone_number_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], default='Enabled', max_length=8)),
            ],
            options={
                'db_table': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('contact_person', models.CharField(max_length=100, null=True)),
                ('subscription_start_date', models.DateField()),
                ('subscription_end_date', models.DateField()),
                ('status', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], default='Disabled', max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=10, unique=True)),
                ('country_phone_code', models.CharField(max_length=10)),
                ('country_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('entity_type', models.CharField(choices=[('Ecommerce', 'Ecommerce'), ('Standard', 'Standard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'entites',
            },
        ),
        migrations.CreateModel(
            name='EntityDictionary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('entite', models.CharField(max_length=50)),
                ('synonyms', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'entities_dictionary',
            },
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('priorite_affichage', models.IntegerField(default=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'intents',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_name', models.CharField(max_length=50, unique=True)),
                ('monthly_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('annual_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('features', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_types',
            },
        ),
        migrations.CreateModel(
            name='TextNormalization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_text', models.CharField(max_length=255, unique=True)),
                ('normalized_text', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'texts_normalization',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('chatbot', 'Chatbot'), ('client', 'Client'), ('operator', 'Operator'), ('system', 'System'), ('founder', 'Founder')], default='client', max_length=10)),
                ('firstname', models.CharField(max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=255, null=True, unique=True)),
                ('password', models.CharField(max_length=255, null=True)),
                ('contry_phone_code', models.CharField(max_length=10)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('display_phone_number', models.CharField(max_length=255)),
                ('business_account_id', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('disabled', 'Disabled')], default='active', max_length=10)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='ChannelPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.channel')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.platform')),
            ],
            options={
                'db_table': 'channels_platforms',
            },
        ),
        migrations.AddField(
            model_name='channel',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.company'),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handled_by', models.IntegerField(default=1, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=10, null=True)),
                ('current_context_id', models.PositiveBigIntegerField(null=True)),
                ('session_data', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.channelplatform')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.user')),
            ],
            options={
                'db_table': 'conversations',
            },
        ),
        migrations.CreateModel(
            name='ConversationStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_source', models.CharField(choices=[('user', 'User'), ('chatbot', 'Chatbot'), ('operator', 'Operator')], max_length=10)),
                ('message_id_identified', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('NA', 'NA')], default='No', max_length=3)),
                ('option_step_id', models.PositiveIntegerField()),
                ('step_number', models.IntegerField()),
                ('step_status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='active', max_length=10, null=True)),
                ('current_context_id', models.PositiveBigIntegerField(null=True)),
                ('session_data', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.conversation')),
            ],
            options={
                'db_table': 'conversations_steps',
            },
        ),
        migrations.CreateModel(
            name='ConversationStepText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('conversation_step', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='chatbot.conversationstep')),
            ],
            options={
                'db_table': 'conversations_steps_texts',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.country'),
        ),
        migrations.CreateModel(
            name='MessageStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_from_api_whatsapp', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('received', 'Received')], max_length=20, null=True)),
                ('timestamp', models.CharField(max_length=255, null=True)),
                ('recipient_id', models.CharField(max_length=20, null=True)),
                ('pricing_model', models.CharField(max_length=10, null=True)),
                ('category', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(max_length=10, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('conversation_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.conversationstep')),
            ],
            options={
                'db_table': 'messages_statuses',
            },
        ),
        migrations.CreateModel(
            name='ResponseTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('language', models.CharField(default='fr', max_length=10)),
                ('priority', models.IntegerField(default=0)),
                ('requires_context', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('intent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.intent')),
            ],
            options={
                'db_table': 'responses_template',
            },
        ),
        migrations.CreateModel(
            name='ResponseRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_conditions', models.TextField(blank=True, null=True)),
                ('context_required', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('intent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.intent')),
                ('response_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.responsetemplate')),
            ],
            options={
                'db_table': 'responses_rules',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='subscription_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.subscriptiontype'),
        ),
    ]
